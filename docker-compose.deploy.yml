version: "3.8"

services:
  
  collageStore:
    image: "postgres:latest"
    ports:
      - 5432:5432
    command: postgres
    environment:
      POSTGRES_HOST:
      POSTGRES_USER:
      POSTGRES_DATABASE:
      POSTGRES_DB:
      POSTGRES_PASSWORD:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DATABASE "]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./_volumes/collageStore:/var/lib/postgresql/data

  api:
    image: "$OWNER/collageapi:$VERSION"
    command: ["npm", "run", "start"]
    restart: always
    environment:
      POSTGRES_USER:
      POSTGRES_DATABASE:
      POSTGRES_PASSWORD:
      POSTGRES_HOST: collageStore
      MQTT_ADDR: 
      MQTT_PORT: 1883
      LIFELINE_TIME:
      LOG_LIFELINE:
    networks:
      - mqtt
      - default
    ports:
      - 3000:3000
    depends_on:
      collageStore:
        condition: service_healthy


  explorer:
    image: "$OWNER/collageexplorer:$VERSION"
    command: ["npm", "run", "start"]
    environment: 
      REACT_APP_API_ADDR:
      REACT_APP_MEDIA_ADDR:
    networks:
      - mqtt
    ports:
      - 3033:3000
    restart: always

  filestore:
    image: "$OWNER/collagefilestore:$VERSION"
    command: ["npm", "run", "start"]
    restart: unless-stopped
    ports:
      - 3030:3000
    volumes:
      - ./_uploads:/usr/app/uploads
      - ./_pictograms:/usr/app/pictograms


  manager:
    image: "$OWNER/collagemanager:$VERSION"
    command: ["npm", "run", "start"]
    environment:
      MQTT_ADDR: 
      MQTT_PORT: 1883
    networks:
      - mqtt
    ports:
      - 3003:3000
      - 3004:3001
    restart: unless-stopped

  web:
    image: "$OWNER/collageweb:$VERSION"
    restart: unless-stopped
    ports:
      - 8081:3000
      - 8080:80
    environment: 
      REACT_APP_API_ADDR:
      REACT_APP_MEDIA_ADDR:


  mechanical:
    image: "$OWNER/collagemechanical:$VERSION"
    command: ["npm", "run", "start"]
    ports:
      - 3333:3000
    restart: unless-stopped
    
  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config

  watchtower:
    image: containrrr/watchtower
    environment:
      - WATCHTOWER_POLL_INTERVAL: 3600
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    

  mqttBroker:
    image: "eclipse-mosquitto:latest"
    volumes:
      - ./images/mqtt/config:/mosquitto/config
      - ./images/mqtt/data:/mosquitto/data
      - ./images/mqtt/log:/mosquitto/log
    ports:
      - 9001:9001
      - 1883:1883
    restart: unless-stopped

    networks:
      - mqtt
volumes:
  caddy_data:
  caddy_config:


networks:
  mqtt:
    driver: bridge